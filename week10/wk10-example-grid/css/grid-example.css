:root {
  /* You can declare CSS custom properties (AKA 
   * variables) in a :root pseudo-class.
   * Use the variables in other rules with
   * var(--varname).
   * Custom properties start with a double-dash (--).
   */
  --purple: #9393ff;
  --orange: #ffdc9c;
}
.container {
  background-color: var(--purple); 
  padding:1em;

  display: grid;
}
.item {
  background-color: var(--orange);
  border:2px solid orange;
}

/* BASIC EXAMPLE */
#example-1 {
  /* grid-template-columns: 100px 200px 300px; */
  /* grid-template-columns: 30% 40% 30%; */
  grid-template-columns: 1fr 2fr 1fr 3fr;
  /* grid-template-rows: 100px 200px; */
  /* grid-template-rows: repeat(3, 50px); */
  grid-template-rows: 100px repeat(2, minmax(50px, auto));
  grid-auto-rows: minmax(200px, auto);
  gap: 1em;
}

/* SECOND EXAMPLE */
#example-2 {
  grid-template-columns: repeat(4, 1fr);
  grid-template-rows: repeat(2, minmax(50px, auto));

  grid-template-areas: "area1 area2 area3 area4"
                       "area1 area5 area5 area6";
}
#example-2 .item:first-child {
  grid-area: area1;
}
#example-2 .item:nth-child(3) {
  grid-area: area5;
}

/* LAYOUT EXAMPLE */
/* Using template areas */
.grid {
  display: grid;
  grid-template-rows: minmax(100px, auto) minmax(50px, auto) minmax(50px, auto);
  grid-template-columns: 1fr 3fr 1fr;
  /* grid-auto-rows: ; */
  gap: 1em;

  grid-template-areas:  "header header header"
                        "side1 main side2"
                        "footer footer footer";
}

.grid > * {
  border:1px solid #000;
}

#header {
  grid-area: header;
}
#main {
  grid-area: main;
}
#sidebar-one {
  grid-area: side1;
}
#sidebar-two {
  grid-area: side2;
}
#footer {
  grid-area: footer;
}
@media screen and (max-width: 768px) {
  .grid {
    grid-template-columns: 3fr 1fr;
    grid-auto-rows: minmax(75px, auto) minmax(400px, auto) minmax(100px, auto) minmax(50px, auto);
    grid-template-areas: "header header"
                          "main side2"
                          "side1 side1"
                          "footer footer";
  }
}
/* If you want to support older browsers, for your default styles,
 * use flex for the layout, then add a @supports query for
 * browsers which can use grid.
 */
@supports (display:grid) {

}
